import numpy as np
import random
import math

rate = 0.02
mu = 0.05
sigma = 0.2
N = 11
M = 1000
S = np.zeros((N,M))     #matrix initialization
dt = 1   #1년단위:1, 일단위: 1/N (N:250 영업일) 
R = 0
C_fail = 0

#
for j in range(0, M):
   prop = 0.4    #initial portfolio rate

   for i in range(1, N):
       S[0][j] = 100000          #initial investment 100,000    
       Sij = S[i-1][j] * prop    #stock invest amount
       Dij = S[i-1][j] - Sij     #deposit invest amount
    
     #  R = mu*dt+sigma*math.sqrt(dt)*random.normalvariate(mu=0,sigma=1)  #stock return rate
       R = math.exp((mu - 0.5*sigma**2)*dt + sigma * math.sqrt(dt) * random.normalvariate(mu=0,sigma=1))
       S1 = Sij * R + Dij * (1 + rate)  #return result
       S[i][j] = S1

     # if i < N:
       if R > 1:
          prop = 0.6
       else :
          prop = 0.2
      
#      print("Sij,Dij,R,S1,prop [",i,"][",j,"]", round(Sij), round(Dij), R, round(S1), prop)
   if S[N-1][j] < 100000: 
       C_fail = C_fail + 1  

#
NegativeWealth = C_fail / M
